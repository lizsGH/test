<?php

namespace app\controllers;

use Yii;
use yii\filters\AccessControl;
use yii\helpers\ArrayHelper;
use yii\web\Controller;
use yii\filters\VerbFilter;
use app\models\LoginForm;
use app\models\ContactForm;
use app\components\client_db;
class BaseController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['logout'],
                'rules' => [
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    public function beforeAction($action)
    {
        //验证授权


//        $ipfh = popen("/home/bluedon/bdscan/bdauth/bdCheckInfo/CheckInfo 2>/dev/stdout", 'r');
//        $res = fgets($ipfh);
//        pclose($ipfh);
        exec("/home/bluedon/bdscan/bdauth/bdCheckInfo/CheckInfo",$res);
        if($res[0]=='0' && Yii::$app->request->url!='/site/login' && !stripos(Yii::$app->request->url ,'captcha')){
            //echo "<script>alert('授权失败');window.location.href='/site/login';</script>";die;
        }

       // var_dump($res);die;
        //parent::beforeAction($action); // TODO: Change the autogenerated stub
        // var_dump(!isset($_SESSION['username']) && Yii::$app->request->url!='/site/login' && !stripos(Yii::$app->request->url ,'captcha'));die;
        if(!isset($_SESSION['username']) && parse_url(Yii::$app->request->url)['path']!= '/bbgl/htmltoimg' && Yii::$app->request->url!='/site/login' && !stripos(Yii::$app->request->url ,'captcha')){
            return $this->redirect('/site/login')->send();
        }

        return true;

    }

    /**
     * @inheritdoc
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
                'maxLength'=>4
            ],
        ];
    }



    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->enableCsrfValidation=false;
        global $db,$act,$show;
        $db = new client_db();
        // echo '<pre>';
        $pathInfo=explode('/',Yii::$app->request->getUrl());
        $act=$pathInfo[1];
        if(!isset($pathInfo[2])){
            $show='index';
        }else{
            $show=$pathInfo[2];
        }

        //var_dump($pathInfo,$act,$show);die;
        //国际化
        if (isset($lang) && $lang != "") {
            Yii::$app->session->set("language", $lang);
        }
        if (!Yii::$app->session->get("language")){
            Yii::$app->session->set("language", "zh_CN");
        }
        Yii::$app->language= Yii::$app->session->get('language');


        //session过期处理
        global $exp_time ;
        $exp_time='';
        $exp_times = $db->result_first("SELECT iSessionTimeout FROM ".getTable('userconfig')." WHERE iId=1");
        if(empty($exp_times)){
            $exp_time = 24*60*60;
        }else{
            $exp_time = $exp_times*60;
        }
        $auth = $db->fetch_first("SELECT * FROM bd_sys_sessions WHERE username='{$_SESSION['username']}' and uuid='{$_SESSION['uuid']}'");
        if(empty($auth) || $auth['exptime']<time()){//$auth['exptime']<$timestamp
            $db->execute("DELETE FROM "."bd_sys_sessions"." WHERE username='".filterStr($_SESSION['username'])."' and uuid='{$_SESSION['uuid']}'");
            unset($_SESSION['username']);
            unset($_SESSION['uuid']);
            $username = '';

        }else{
            $exptime=$exp_time+time();
            $sql= "update bd_sys_sessions set dateline=".time().",exptime=$exptime where username='{$_SESSION['username']}' and uuid='{$_SESSION['uuid']}' ";
            $db->execute($sql);
            $username = $auth['username'];
        }
        if(empty($username) && parse_url(Yii::$app->request->url)['path']!= '/bbgl/htmltoimg' && Yii::$app->request->url!='/site/login' && !stripos(Yii::$app->request->url ,'captcha')){
            return $this->redirect('/site/login')->send();
        }

        //检查授权是否过期
        $shouquansql = "select * from bd_sys_sysinfo";
        $shouquanres = $db->fetch_first($shouquansql);
        if(!empty($shouquanres['endtime'])){
            $timestr = time();
            $endtimestr = strtotime($shouquanres['endtime']);
            if($timestr>$endtimestr){
                header("Location: ".Yii::$app->request->hostInfo."/shouquan.html");die;
            }
        }





//三个管理员
        /** 0：超级管理员 root */
        /** 1:系统管理员，2:审计管理员，3:用户 */
        /**
        if($auth['role'] == 3){//用户
        $act = (!in_array($act, $ext_act) || $act=='index') ? $act='report' : $act;
        }else if($auth['role'] == 1){//系统管理员
        $act = (!in_array($act, $ext_act) || $act=='index') ? $act='manuser' : $act;
        }else if($auth['role'] == 2 || $auth['role'] == 0){//安全管理员
        if($act=='report' || $act=='manuser'){
        header('Location: ./index.php');
        exit;
        }
        }
         */
//        //解除session的写锁（注意，需要写入session的脚本，要在此添加）
//        if($act != 'login' && $act != 'tuopu' && $act != 'varios'){
//            session_write_close();
//        }

    }


    //获取弱密码漏洞键值对
    function getWeakVuls(){
        global $db;
        $vuls = $db->fetch_all("select * from bd_weakpwd_vul_lib");
        $vuls = ArrayHelper::map($vuls,'vul_id','vul_name');
        return $vuls;
    }

    //获取弱密码漏洞键值对
    function getWebVuls(){
        global $db;
        $vuls = $db->fetch_all("select * from bd_web_vul_lib");
        $vuls = ArrayHelper::map($vuls,'vul_id','vul_name');
        return $vuls;
    }

    //获取弱密码漏洞键值对
    function getHostVuls(){
        global $db;
        $vuls = $db->fetch_all("select vul_id,vul_name from bd_host_vul_lib");
        $vuls = ArrayHelper::map($vuls,'vul_id','vul_name');
        return $vuls;
    }

    function getAllTables()
    {
        global $db;
        $tables = $db->fetch_all("show TABLES");
        foreach ($tables as $key => $value) {
            $rowtable[] = $value['Tables_in_security'];
        }
        return $rowtable;
    }
}
